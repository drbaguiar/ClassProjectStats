str(ams)
str(ames)
# Regress the given variable on the given predictor,
packages <- c("data.table", "quantmod")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
install.packages("quantmod")
packages <- c("data.table", "quantmod")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
setInternet2(TRUE)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
f <- file.path(getwd(), "ss06hid.csv")
download.file(url, f)
dt <- data.table(read.csv(f))
varNames <- names(dt)
varNamesSplit <- strsplit(varNames, "wgtp")
varNamesSplit[[123]]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip=4, nrows=215, stringsAsFactors=FALSE))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP", "Long.Name", "gdp"))
gdp <- as.numeric(gsub(",", "", dtGDP$gdp))
mean(gdp, na.rm=TRUE)
isUnited <- grepl("^United", dtGDP$Long.Name)
summary(isUnited)
grep("^United",countryNames)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all=TRUE, by=c("CountryCode"))
isFiscalYearEnd <- grepl("fiscal year end", tolower(dt$Special.Notes))
isJune <- grepl("june", tolower(dt$Special.Notes))
table(isFiscalYearEnd, isJune)
dt[isFiscalYearEnd & isJune, Special.Notes]
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
library(quantmod)
amzn = getSymbols("AMZN")
sampleTimes = index(amzn)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
amzn
sampleTimes = index(amzn)
sampleTimes
addmargins(table(year(sampleTimes), weekdays(sampleTimes)))
# Regress the given variable on the given predictor,
data(mtcars)
fit <- lm(mpg ~ factor(cyl) + wt, mtcars)
summary(fit)
fit2 <- lm(mpg ~ factor(cyl), mtcars)
summary(fit2)
fit3 <- lm(mpg ~ factor(cyl)*wt, mtcars)
summary(fit3)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
lm.influence(fit)$hat
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y~x)
lm.influence(fit)$hat
dfbetas(fit)
library(swirl)
swirl()
sys.getlocale("LC_TIME")
sys.getlocale("LC_TIME")
sys.getlocale("LC_TIME")
?sys.getlocal
library(lubridate)
library(lubridate)
library(lubridate)
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <-today()
this_day
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour(this_moment)
ymd("1989-05-17")
my_date ymd("1989-05-17")
my_date <-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
myd("March 12,1975")
mdy("March 12,1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd(//"192012//")
ymd(//"192012"//)
ymd(//"192012")
ymd("//192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update(this_moment, now())
update(this_moment, hours = 10, minutes=55
)
update(this_moment, hours = 10, minutes=55)
update(this_moment, hours = 10, minutes=55, seconds = 20)
update(this_moment, hours = 10, minutes=16, seconds = 0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
update(this_moment, hours = 10, minutes = 56, seconds = 0)
update(this_moment, hours = 10, minutes = 56, seconds = 0)
update(this_moment, hours = 10, minutes = 56, seconds = 0)
update(this_moment, hours = 10, minutes = 57, seconds = 0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
info()
skip()
this_moment
?noe
?now
now(tzone ="America/New_York")
nyc <-now(tzone ="America/New_York")
nyc
depart <-nyc + days(2)
depart
update(depart, hour=17, minutes = 34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive = depart + hours(15)+minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone="Asia/Hong_Kong")
arrice
arrive
last_time <- arrive
last_time <-mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval()
?new_interval
how_long <-new_interval(arrive,last_time, tzone=attr(arrive,"tzone"))
how_long <-new_interval(arrive,last_time, tzone=attr(arrive,"tzone"))
how_long <-new_interval(arrive,last_time, tzone=attr(arrive,"tzone"))
how_long <-new_interval(arrive,last_time)
how_long <-new_interval(last_time,arrive)
as.period(how_Lonmg)
as.period(how_long)
stopwatch()
data (InspectSPrays)
data (InsectSPrays)
data (InsectSprays)
summary(lm(count~spray, date=InsectSprays))%coef
summary(lm(count~spray, data=InsectSprays))%coef
summary(lm(count~spray, data=InsectSprays))$coef
summary(lm(count~spray-1, data=InsectSprays))$coef
summary(lm(count~spray, data=InsectSprays))
spray2 <-relevel(InsectSpray$spray="C")
spray2 <-relevel(InsectSpray$spray,"C")
spray2 <-relevel(InsectSprays$spray,"C")
summary(lm(count~spray, data=InsectSprays))$coef
summary(lm(count~spray2, data=InsectSprays))$coef
#download.file("http://apps.who.int/gho/athena/data/GHO/WHOSIS_000008.csv?profile=text&filter=COUNTRY:*;SEX:*","hunger.csv",method="curl")
hunger <- read.csv("hunger.csv")
hunger <- hunger[hunger$Sex!="Both sexes",]
head(hunger)
download.file("http://apps.who.int/gho/athena/data/GHO/WHOSIS_000008.csv?profile=text&filter=COUNTRY:*;SEX:*","hunger.csv",method="curl")
hunger <- read.csv("hunger.csv")
hunger <- hunger[hunger$Sex!="Both sexes",]
head(hunger)
download.file("http://apps.who.int/gho/athena/data/GHO/WHOSIS_000008.csv?profile=text&filter=COUNTRY:*;SEX:*","hunger.csv",method="curl")
download.file("http://apps.who.int/gho/athena/data/GHO/WHOSIS_000008.csv?profile=text&filter=COUNTRY:*;SEX:*","hunger.csv")
hunger <- read.csv("hunger.csv")
hunger <- hunger[hunger$Sex!="Both sexes",]
head(hunger)
lm1 <- lm(hunger$Numeric ~ hunger$Year)
plot(hunger$Year,hunger$Numeric,pch=19,col="blue")
lines(hunger$Year,lm1$fitted,lwd=3,col="darkgrey")
lines(lm1)
lines(lm(hunger$Numeric ~ hunger$Year))
lines(lm(hunger$Numeric ~ hunger$Year))
summary(lm1)
points(hunger$Year,hunger$Numeric,pch=19,col=((hunger$Sex=="Male")*1+1))
dbnomial*()
dbinom(4, size=12, prob=0.2)
pbinom(4, size=12, prob=0.2)
pbinom(4, size=12, prob=0.2)
chose (4,12)
choose(4,12)
choose(12,4)
choose(9,2)
pbinom(8, size=10, prob=0.13)
pbinom(8, size=10, prob=0.13)
Dbinom(8, size=10, prob=0.13)
dbinom(8, size=10, prob=0.13)
?dbinom
require(graphics)
# Compute P(45 < X < 55) for X Binomial(100,0.5)
sum(dbinom(46:54, 100, 0.5))
## Using "log = TRUE" for an extended range :
n <- 2000
k <- seq(0, n, by = 20)
plot (k, dbinom(k, n, pi/10, log = TRUE), type = "l", ylab = "log density",
main = "dbinom(*, log=TRUE) is better than  log(dbinom(*))")
lines(k, log(dbinom(k, n, pi/10)), col = "red", lwd = 2)
## extreme points are omitted since dbinom gives 0.
mtext("dbinom(k, log=TRUE)", adj = 0)
mtext("extended range", adj = 0, line = -1, font = 4)
mtext("log(dbinom(k))", col = "red", adj = 1)
dbinom(8, size=10, prob=0.13)
pbinom(8, size=10, prob=0.87)
dbinom(8, size=10, prob=0.13)
pbinom(2, size=10, prob=0.87)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
anova(lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars))
fit.1 <- lm(mpg~wt, data=mtcars)
fit.2 <- lm(mpg~wt+factor(cyl), data=mtcars)
anova(fit.2, fit.1)
dfbeta(fit.1)
dfbeta(fit.2)
plot(fit.1)
plot(fit.2)
inf.temp <- influence.measures(fit1)
inf.pts <- which(apply(inf.temp$is.inf, 1, any))
mtcars[inf.pts,]
inf.temp <- influence.measures(fit.1)
inf.pts <- which(apply(inf.temp$is.inf, 1, any))
mtcars[inf.pts,]
influence.measures(fit.1)
lm.inf.coef <- lm.influence(fit.1)$coefficients
lm.inf.pts <- apply(lm.inf.coef, 2, FUN=function(x) which.max(abs(x)))
lm.inf.coef[lm.inf.pts,] #
lm.inf.pts.top5 <- apply(lm.inf.coef, 2, FUN=function(x)
names(rev(sort(abs(x)))[1:5]))
lm.inf.pts.top5
fit.all <- lm(mpg~., data=mtcars)
summary(fit.all)
result.step.1 <- step(fit.all, direction="both")
summary(result.step.1)
# Step-wise selection for all main effects keeping hp in the model
result.step.2 <- step(fit.all, direction="both", scope=list(lower=~hp))
summary(result.step.2)
# Step-wise selection for all main effects and upto all interactions
result.step.3 <- step(fit.all, direction="both", scope=list(upper=~.^2))
summary(result.step.3)
# Step-wise selection for all main effects keeping hp in the model
# regardlessly and including all terms upto two-way interactions
result.step.4 <- step(fit.all, direction="both",
sc
0
# Step-wise selection for all main effects keeping hp in the model
result.step.2 <- step(fit.all, direction="both", scope=list(lower=~hp))
summary(result.step.2)
# Step-wise selection for all main effects and upto all interactions
result.step.3 <- step(fit.all, direction="both", scope=list(upper=~.^2))
summary(result.step.3)
# Step-wise selection for all main effects keeping hp in the model
# regardlessly and including all terms upto two-way interactions
result.step.4 <- step(fit.all, direction="both",
scope=list(lower=~hp, upper=~.^2))
summary(result.step.4)
fit3 <- lm(mpg ~ factor(cyl)*wt, mtcars)
fit <- lm(mpg ~ ., mtcars)
fit
summary(fit)
ls
mean (mtcars)
mean (mtcars$mpg)
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
activity_labels
features''
features
extract_features
X_test
extract_features
data
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
pwd()
swd()
wd()
pwd()
?working
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
features
extract_features
names(x_test)
x_test
source('~/GitHub/ClassProject/run_analysis.R')
source('~/GitHub/ClassProject/run_analysis.R')
summary(tidy_data)
names(tidy_data)
str(tidy_data)
correlation
data(mtcars)
cor.out <->
round(cor.out, 3)
data(mtcars)
cor.out <- round(cor.out, 3)
mtcars$am <- factor(mtcars$am,levels="c(0,1)," labels=""
mtcars$cyl <- factor(mtcars$cyl,levels="c(4,6,8)," labels="">
mtcars$gear <- factor(mtcars$gear,levels="c(3,4,5)," labels="">
cor.out <- sort(cor(mtcars)[,1])
cor.out
cor(mtcars)
require()
influential
sort(corr(mtcars))
sort(cor(mtcars))
glm
?glm
cuse <- read.table("http://data.princeton.edu/wws509/datasets/cuse.dat", header=TRUE)
cuse
attach(cuse)
lrfit <- glm( cbind(using, notUsing) ~ +  age + education + wantsMore , family = binomial)
lrfit
library(MASS)
?shuttle
data(shuttle)
str(shuttle)
names(shuttle)
?glm
fit <- glm(use ~ wind, family='binomial', shuttle)
exp(fit$coeff)
fit <- glm(use ~ wind + as.factor(magn), family='binomial', shuttle)
exp(fit$coeff)
data(InsectSprays)
outp <- exp(coef(glm(count ~ as.factor(spray) - 1, family="poisson", InsectSprays)))
outp
outp[1]/outp[2]
?offset
log(10)
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(y ~ x)
d1 <- c(0, 0 ,0, 0, 0,  0,  1 , 1,  1 , 1 , 1)
d2 <- c(1, 1 ,1, 1, 1,  1,  0 , 0,  0, 0 , 0)
# y = c + d1 * x + d2 * x
summary(lm(y ~ d1*x))
summary(logRegshuttle <- glm(use ~ wind,family="binomial", data=shuttle1))
glm(formula = use ~ factor(wind)+magn, family = binomial(logit), data = shuttle1)
1/exp(0.03201)
LogiRegUseMinus<-glm((1-shuttle$use)~shuttle$wind,family="binomial")
glm(formula = 1-use ~ factor(wind), family = binomial(logit), data = shuttle1)
1-0.03181
exp(coef(glm(count ~ as.factor(spray) - 1, family="poisson", InsectSprays)))
14.5/15.333
data(InsectSprays)
InsectSprays
pspray <- glm(InsectSprays$count ~ factor(InsectSprays$spray),family="Poisson")
pspray <- glm(InsectSprays$count ~ factor(InsectSprays$spray),family="poisson")
summary(pspray)
exp(2.659)
y=c(1:10)
x=y-1+rnorm(10)/10
z=c(1:10)
z=z*2
summary(lm(y~x+offset(z)))
z=z*4
summary(lm(y~x+offset(z)))
z=z+5
summary(lm(y~x+offset(z)))
z=z+100
summary(lm(y~x+offset(z)))
z=z/10
summary(lm(y~x+offset(z)))
z=z+log(10)
summary(lm(y~x+offset(z)))
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(y ~ x)
d1 <- c(0, 0 ,0, 0, 0,  0,  1 , 1,  1 , 1 , 1)
d2 <- c(1, 1 ,1, 1, 1,  1,  0 , 0,  0, 0 , 0)
summary(lm(y ~ d1*x))
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(y ~ x)
d1 <- c(0, 0 ,0, 0, 0,  0,  1 , 1,  1 , 1 , 1)
d2 <- c(1, 1 ,1, 1, 1,  1,  0 , 0,  0, 0 , 0)
# y = c + d1 * x + d2 * x
summary(lm(y ~ d1*x))
?offset
log(10)
=c(1:10)
x=y-1+rnorm(10)/10
z=c(1:10)
z=z*2
summary(lm(y~x+offset(z)))
y=c(1:10)
x=y-1+rnorm(10)/10
z=c(1:10)
z=z*2
summary(lm(y~x+offset(z)))
z=z+log(10)
summary(lm(y~x+offset(z)))
exit
exit
install.packages(c("e1071", "formatR", "Hmisc", "htmltools", "httr", "jsonlite", "KernSmooth", "Lahman", "markdown", "swirl", "UsingR"))
if (!file.exists("gss.Rdata")) {
data.url <- 'http://bit.ly/dasi_gss_data'
gss <- download.file(data.url, destfile = 'gss.Rdata')
data (gss)
}
gss
if (!file.exists("gss.Rdata")) {
data.url <- 'http://bit.ly/dasi_gss_data'
download.file(data.url, destfile = 'gss.Rdata')
}
gssData <- read.table("gss.Rdat")
getwd()
> if (!file.exists("gss.Rdata")) {
+     data.url <- 'http://bit.ly/dasi_gss_data'
+     download.file(data.url, destfile = 'gss.Rdata')
+
+ }
gssData <- read.table("gss.Rdat")
> if (!file.exists("gss.Rdata")) {
data.url <- 'http://bit.ly/dasi_gss_data'
download.file(data.url, destfile = 'gss.Rdata')
}
if (!file.exists("gss.Rdata")) {
data.url <- 'http://bit.ly/dasi_gss_data'
download.file(data.url, destfile = 'gss.Rdata')
}
gssData <- read.table("gss.Rdat")
getwd()
gssData <- read.file("gss.Rdat")
gss <- read.table("~/GitHub/R/gss.Rdata", quote="\"")
View(gss)
View(gss)
load("~/GitHub/R/gss.Rdata")
load("~/GitHub/R/gss.Rdata")
load("~/GitHub/ClassProjectStats/gss.Rdata")
load("~/GitHub/ClassProjectStats/data/gss.Rdata")
str(gss)
str(gss)
load("~/GitHub/ClassProjectStats/data/gss.Rdata")
ls
ls()
str(gss)
names(gsss)
names(gss)
?load
?load
load("./data/gss.Rdata")
getwd()
setwd("C:/Users/bryan_000/Documents/GitHub/ClassProjectStats")
load("./data/gss.Rdata")
load("gss.Rdata")
load(url("http://bit.ly/dasi_gss_data"))
table(educ)
table(gss$educ)
hist(gss$educ)
data()
names(gss)
tables(xmarsex)
table(xmarsex)
table(gss$xmarsex)
bar(table(gss$xmarsex))
barplot(table(gss$xmarsex))
summary(educ)
summary(gss$educ)
summary(gss$xmarsex)
boxplot(gss$educ)
anova (gss$educ~gss$xmarsec)
anova (gss$educ)
anov(gss$educ)
anova
?anova
anova(gss)
anova(educ)
anova(gss$educ)
anova(gss$educ,gss$xmarsex)
qqnorm(gss$educ)
qqline(gss$educ)
by (gss$educ, gss$xmarsex, mean)
by (gss$educ, gss$xmarsex, mean, na.rm = TRUE)
by (gss$educ, gss$xmarsex, summary, na.rm = TRUE)
by (gss$educ, gss$xmarsex, summary)
boxplot(gss$educ ~ gss$xmarsex)
anova(gss$educ,gss$xmarsex)
View(gss)
write.csv(gss, "gss.csv")
